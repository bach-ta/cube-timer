{"version":3,"sources":["components/Display.jsx","components/ResultDetails.jsx","components/Results.jsx","components/Scramble.jsx","components/AO5.jsx","components/LineChart.jsx","scrambler.js","App.js","index.js"],"names":["Display","time","active","className","Typography","variant","ResultDetails","result","deleteSolve","id","date","scramble","useState","open","setOpen","handleClose","Button","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","Grid","container","spacing","item","xs","align","size","color","DialogActions","autoFocus","Results","results","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","scope","Scramble","newScramble","AO5","ao5","pb","Card","CardContent","details","LineChart","data","labels","Date","toLocaleDateString","datasets","label","borderColor","fill","t","reverse","options","scales","x","getScramble","ans","s","y","z","move","k","Math","floor","random","i","useStateLC","key","initial","window","saved","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","App","timerOn","setTimerOn","displayTime","setDisplayTime","intervalID","setIntervalID","startTime","setStartTime","p","setP","setScramble","totalSolves","setTotalSolves","setResults","setAo5","personalBest","setPersonalBest","onKeyDown","e","preventDefault","stopPropagation","clearInterval","a","newDisplayTime","getTime","toFixed","newResult","toLocaleString","newResults","unshift","total","sum","minidx","maxidx","cur","parseFloat","newAO5","document","removeEventListener","onKeyUp","keyCode","startTimeDate","interval","setInterval","addEventListener","justify","Box","mb","confirm","alert","shift","newTotal","console","log","newPB","push","ReactDOM","render","getElementById"],"mappings":"8OAceA,EAVC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACvB,OACE,qBAAKC,UAAWD,EAAS,gBAAkB,kBAA3C,SACE,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKF,UAAU,YAAnC,SACE,iCAASF,S,gJCkEFK,EAtEO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACvBC,EAA6BF,EAA7BE,GAAIR,EAAyBM,EAAzBN,KAAMS,EAAmBH,EAAnBG,KAAMC,EAAaJ,EAAbI,SACxB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMMC,EAAc,WAClBD,GAAQ,IAUV,OACE,gCACE,cAACE,EAAA,EAAD,CAAQC,QAjBY,WACtBH,GAAQ,IAgBN,SACGL,EAAK,IAER,eAACS,EAAA,EAAD,CACEL,KAAMA,EACNM,QAASJ,EACTK,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAACC,EAAA,EAAD,CAAab,GAAG,qBAAhB,SAAsC,YACtC,cAACc,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBf,GAAG,2BAAtB,SACE,eAACgB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UAEE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,MAAM,SAAxB,oBAA0CvB,EAAOE,GAAK,KACtD,cAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,MAAM,SAAxB,SAAkC7B,IAClC,cAACwB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,MAAM,SAAxB,SAAkCpB,IAClC,cAACe,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,MAAM,QAAxB,SACE,cAACd,EAAA,EAAD,CACEe,KAAK,QACLC,MAAM,YACNf,QAAS,WACPF,IACAP,EAAYC,IALhB,SAQE,cAAC,IAAD,QAGJ,eAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,uBACalB,YASnB,cAACsB,EAAA,EAAD,UACE,cAACjB,EAAA,EAAD,CAAQC,QAASF,EAAaiB,MAAM,YAAYE,WAAS,EAAzD,4BCVKC,EAjDC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAAS5B,EAAkB,EAAlBA,YAC1B,OACG4B,EAAQ,GAGT,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOT,KAAK,QAAQU,aAAW,gBAA/B,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWd,MAAM,SAAjB,iBACA,cAACc,EAAA,EAAD,CAAWd,MAAM,SAAjB,uBAIJ,cAACe,EAAA,EAAD,UACGT,EAAQU,KAAI,SAACvC,GAAD,OACX,eAACoC,EAAA,EAAD,CAA0BX,MAAM,UAAhC,UACE,cAACY,EAAA,EAAD,CAAWd,MAAM,SAASQ,UAAU,KAAKS,MAAM,MAA/C,SACE,cAAC,EAAD,CAAexC,OAAQA,EAAQC,YAAaA,MAE9C,cAACoC,EAAA,EAAD,CAAWd,MAAM,SAAjB,SAA2BvB,EAAON,SAJrBM,EAAOE,cAb1B,cAACL,EAAA,EAAD,CAAYC,QAAQ,QAApB,yBCQO2C,EAdE,SAAC,GAA+B,IAA7BrC,EAA4B,EAA5BA,SAAUsC,EAAkB,EAAlBA,YAC5B,OACE,gCACE,4BAAItC,IACJ,cAACK,EAAA,EAAD,CACEX,QAAQ,YACRY,QAAS,kBAAMgC,KAFjB,8B,kBCwBSC,EA5BH,SAAC,GAAe,IAAdC,EAAa,EAAbA,IAAKC,EAAQ,EAARA,GACjB,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAClD,EAAA,EAAD,CAAYC,QAAQ,KAApB,2BAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAAK2B,MAAM,UAA/B,SACW,QAARmB,EAAgBA,EAAMA,EAAIlD,OAE7B,cAACG,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACW,QAAR8C,EAAgB,KAAOA,EAAII,UAG9B,cAACnD,EAAA,EAAD,CAAYC,QAAQ,KAApB,mBAGA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAAK2B,MAAM,UAA/B,SACU,QAAPoB,EAAeA,EAAKA,EAAGnD,a,SCenBuD,EAjCG,SAAC,GAAsB,IAApBpB,EAAmB,EAAnBA,QAASe,EAAU,EAAVA,IAC5B,OACEf,EAAQ,GACN,cAAC,IAAD,CACEqB,KAAM,CACJC,OAAQtB,EAAQU,KAAI,gBAAGpC,EAAH,EAAGA,KAAH,OAAc,IAAIiD,KAAKjD,GAAMkD,wBACjDC,SAAU,CAAC,CACTJ,KAAMrB,EAAQU,KAAI,SAAAvC,GAAM,OAAIA,EAAON,QACnC6D,MAAO,OACPC,YAAa,UACbC,MAAM,GACL,CACDP,KAAMN,EAAIL,KAAI,SAAAmB,GACZ,MAAa,QAANA,EAAc,KAAOA,EAAEhE,QAEhC6D,MAAO,eACPC,YAAa,UACbC,MAAM,IAERE,SAAS,GAEXC,QAAS,CACPC,OAAQ,CACNC,EAAG,CACDH,SAAS,OAKf,MCsBOI,EAtDK,WAClB,IACIC,EAAM,GACNC,GAAK,EACLH,EAAI,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,MACjCI,EAAI,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,MACjCC,EAAI,CAAC,IAAK,KAAM,KAAM,IAAK,KAAM,MAEjCC,EAAO,GAEPC,EAAIC,KAAKC,MAAsB,GAAhBD,KAAKE,UACpBH,EAAI,GACND,EAAON,EAAEO,GACTJ,EAAI,GACKI,EAAI,IACbD,EAAOF,EAAEG,EAAI,GACbJ,EAAI,IAEJG,EAAOD,EAAEE,EAAI,IACbJ,EAAI,GAGN,IAAK,IAAIQ,EAAI,EAAGA,EArBJ,GAqBaA,IAAK,CAC5B,IAAIJ,EAAIC,KAAKC,MAAsB,GAAhBD,KAAKE,UACd,IAANP,EACEI,EAAI,GACND,EAAOF,EAAEG,GACTJ,EAAI,IAEJG,EAAOD,EAAEE,EAAI,GACbJ,EAAI,GAES,IAANA,EACLI,EAAI,GACND,EAAON,EAAEO,GACTJ,EAAI,IAEJG,EAAOD,EAAEE,EAAI,GACbJ,EAAI,GAGFI,EAAI,GACND,EAAON,EAAEO,GACTJ,EAAI,IAEJG,EAAOF,EAAEG,EAAI,GACbJ,EAAI,GAGRD,GAAO,KAAYI,EAErB,OAAOJ,G,SCtCHU,EAAa,SAACC,EAAKC,GACvB,MAA0BvE,oBAAS,WACjC,GAAsB,qBAAXwE,OAAwB,CACjC,IAAMC,EAAQD,OAAOE,aAAaC,QAAQL,GAC1C,GAAc,OAAVG,EACF,OAAOG,KAAKC,MAAMJ,GAGtB,OAAOF,KAPT,mBAAOO,EAAP,KAAcC,EAAd,KAcA,OAJAC,qBAAU,WACRR,OAAOE,aAAaO,QAAQX,EAAKM,KAAKM,UAAUJ,MAC/C,CAACA,IAEG,CAACA,EAAOC,IA6MFI,EA1MH,WACV,MAA8BnF,oBAAS,GAAvC,mBAAOoF,EAAP,KAAgBC,EAAhB,KACA,EAAsCrF,mBAAS,GAA/C,mBAAOsF,EAAP,KAAoBC,EAApB,KACA,EAAoCvF,oBAAU,GAA9C,mBAAOwF,EAAP,KAAmBC,EAAnB,KACA,EAAkCzF,mBAAS,GAA3C,mBAAO0F,EAAP,KAAkBC,EAAlB,KACA,EAAkB3F,oBAAS,GAA3B,mBAAO4F,EAAP,KAAUC,EAAV,KACA,EAAgC7F,mBAAS0D,KAAzC,mBAAO3D,EAAP,KAAiB+F,EAAjB,KAGA,EAAsCzB,EAAW,cAAe,GAAhE,mBAAO0B,EAAP,KAAoBC,EAApB,KACA,EAA8B3B,EAAW,UAAW,IAApD,mBAAO7C,EAAP,KAAgByE,EAAhB,KACA,EAAsB5B,EAAW,MAAO,CAAC,MAAO,MAAO,MAAO,QAA9D,mBAAO9B,EAAP,KAAY2D,EAAZ,KACA,EAAwC7B,EAAW,KAAM,OAAzD,mBAAO8B,EAAP,KAAqBC,EAArB,KAIMC,GAAY,SAAZA,EAAaC,GACjBA,EAAEC,iBACFD,EAAEE,kBACFC,cAAcjB,GACdH,GAAW,SAAAqB,GAAC,OAAKA,KACjB,IAAM5G,EAAO,IAAIiD,KACX4D,IAAmB7G,EAAK8G,UAAYlB,GAAa,KAAMmB,QA1C5C,GA2CjBtB,EAAeoB,GACfhB,EAAa,GAGb,IAAMmB,EAAY,CAChBjH,GAAIkG,EACJ1G,KAAMsH,EACN7G,KAAMA,EAAKiH,iBACXhH,SAAUA,GAENiH,EAAU,YAAOxF,GASvB,GARAwF,EAAWC,QAAQH,GAEnBb,EAAWe,GACXhB,GAAe,SAAAkB,GAAK,OAAIA,EAAQ,MACX,QAAjBf,GAA0BQ,GAAkBR,EAAa9G,OAC3D+G,EAAgBU,GAGdf,EAAc,GAAK,EAAG,CAExB,IADA,IAAIoB,EAAM,EAAGC,EAAS,EAAGC,EAAS,EACzBjD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIkD,EAAMC,WAAWP,EAAW5C,GAAG/E,MACnC8H,GAAOG,EACHA,EAAMC,WAAWP,EAAWI,GAAQ/H,QAAO+H,EAAShD,GACpDkD,GAAOC,WAAWP,EAAWK,GAAQhI,QAAOgI,EAASjD,GAG3D,IADA,IAAIzB,EAAU,GACLyB,EAAI,EAAGA,GAAK,EAAGA,IACtBzB,GAAW,IACuBA,GAA9ByB,IAAMgD,GAAUhD,IAAMiD,EAAmB,IAAML,EAAW5C,GAAG/E,KAAO,IACxD2H,EAAW5C,GAAG/E,KAEhC6G,GAAO,SAAA3D,GACL,IAAMiF,EAAM,YAAOjF,GAKnB,OAJAiF,EAAOP,QAAQ,CACb5H,OAAQ8H,EAAMI,WAAWP,EAAWI,GAAQ/H,MAAQkI,WAAWP,EAAWK,GAAQhI,OAAS,GAAGwH,QAAQ,GACtGlE,QAASA,IAEJ6E,KAIX1B,EAAYpC,KACZ+D,SAASC,oBAAoB,UAAWrB,IAGpCsB,GAAU,SAAVA,EAAWrB,GACf,IAAoB,IAAhBd,EACF,GAAkB,KAAdc,EAAEsB,QAAgB,CAEpBtB,EAAEC,iBACFD,EAAEE,kBACF,IAAMqB,EAAgB,IAAI9E,KAC1B4C,EAAakC,EAAcjB,WAC3BrB,EAAe,GACf,IAAMuC,EAAWC,aAAY,WAC3BxC,GAAe,SAAAD,GAAW,QAAoB,GAAdA,EAAmB,GAAK,IAAIuB,QAAQ,QArGlE,KAuGJpB,EAAcqC,GACdzC,GAAW,SAAAqB,GAAC,OAAKA,KACjBe,SAASC,oBAAoB,QAASC,OACnB,WAAVrB,EAAEhC,MACXgC,EAAEC,iBACFhB,EAAe,SAIjBE,GAAe,GACfI,GAAK,SAAAa,GAAC,OAAKA,KACXe,SAASC,oBAAoB,UAAWrB,IACxCoB,SAASC,oBAAoB,QAASC,IAI1C3C,qBAAU,WAEJI,EAASqC,SAASO,iBAAiB,UAAW3B,IAC7CoB,SAASO,iBAAiB,QAASL,MACvC,CAACvC,EAASQ,IAgEb,OAAuB,IAAhBJ,EACL,qBAAKjG,UAAU,MAAf,SACE,eAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGkH,QAAQ,SAApC,UACE,cAACpH,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,EAAD,CAAUlB,SAAUA,EAAUsC,YAAa,kBAAMyD,EAAYpC,UAG/D,eAAC7C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACE,cAACiH,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC/H,EAAA,EAAD,CAAQX,QAAQ,YAAY2B,MAAM,YAAYf,QArBpC,WACbmB,EAAQ,GAEFgD,OAAO4D,QAAQ,uCACxBpC,EAAe,GACfC,EAAW,IACXV,EAAe,GACfW,EAAO,CAAC,MAAO,MAAO,MAAO,QAC7BE,EAAgB,QANhBiC,MAAM,wBAmBA,yBAIF,cAACH,EAAA,EAAD,CAAM3I,UAAU,gBAAhB,SACE,cAAC,EAAD,CAASiC,QAASA,EAAS5B,YAxEjB,SAACC,GAEnB,IADA,IAAMmH,EAAU,YAAOxF,GACd4C,EAAI2B,EAAclG,EAAK,EAAGuE,GAAK,EAAGA,IACzC4C,EAAW5C,GAAK4C,EAAW5C,EAAI,GAC/B4C,EAAW5C,GAAGvE,KAEhBmH,EAAWsB,QACXrC,EAAWe,GAEX,IAAMuB,EAAWxC,EAAc,EAC/ByC,QAAQC,IAAIF,GACZvC,EAAeuC,GAIf,IADA,IAAIG,EAAQ1B,EAAW,GACd5C,EAAI,EAAGA,EAAImE,EAAUnE,IACxB4C,EAAW5C,GAAG/E,KAAOqJ,EAAMrJ,OAAMqJ,EAAQ1B,EAAW5C,IAE1DgC,EAAgBsC,GAAgB,OAIhC,IADA,IAAMlB,EAAS,GACN5D,EAAI,EAAGA,EAAI2E,EAAW,EAAG3E,IAAK,CAErC,IADA,IAAIuD,EAAM,EAAGC,EAAS,EAAGC,EAAS,EACzBjD,EAAIR,EAAGQ,EAAIR,EAAI,EAAGQ,IAAK,CAC9B,IAAIkD,EAAMC,WAAWP,EAAW5C,GAAG/E,MACnC8H,GAAOG,EACHA,EAAMC,WAAWP,EAAWI,GAAQ/H,QAAO+H,EAAShD,GACpDkD,GAAOC,WAAWP,EAAWK,GAAQhI,QAAOgI,EAASjD,GAG3D,IADA,IAAIzB,EAAU,GACLyB,EAAIR,EAAI,EAAGQ,GAAKR,EAAGQ,IAC1BzB,GAAW,IACuBA,GAA9ByB,IAAMgD,GAAUhD,IAAMiD,EAAmB,IAAML,EAAW5C,GAAG/E,KAAO,IACxD2H,EAAW5C,GAAG/E,KAEhCmI,EAAOmB,KAAK,CACVtJ,OAAQ8H,EAAMI,WAAWP,EAAWI,GAAQ/H,MAAQkI,WAAWP,EAAWK,GAAQhI,OAAS,GAAGwH,QAAQ,GACtGlE,QAASA,IAGb,IAAK,IAAIyB,EAAI,EAAGA,EAAI,EAAGA,IAAKoD,EAAOmB,KAAK,OACxCH,QAAQC,IAAIjB,GACZtB,EAAOsB,WAiCH,eAAC3G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACE,cAACiH,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,EAAD,CAAS9I,KAAMiG,EAAahG,OAAQ,MAEtC,cAAC,EAAD,CAAWkC,QAASA,EAASe,IAAKA,OAGpC,cAAC1B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CAAKsB,IAAKA,EAAI,GAAIC,GAAI2D,WAM5B,cAAC,EAAD,CAAS9G,KAAMiG,EAAahG,OAAQ,KCjOxCsJ,IAASC,OACL,cAAC,EAAD,IACFpB,SAASqB,eAAe,W","file":"static/js/main.6786c04f.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Display.css';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Display = ({ time, active }) => {\r\n  return (\r\n    <div className={active ? \"activeDisplay\" : \"inactiveDisplay\"}>\r\n      <Typography variant=\"h1\" className=\"stopwatch\">\r\n        <strong>{time}</strong>\r\n      </Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Display\r\n","import React, { useState } from 'react'\r\nimport { Grid, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\nconst ResultDetails = ({ result, deleteSolve }) => {\r\n  const { id, time, date, scramble } = result\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // const copyScramble = (text) => {\r\n  //   text.select();\r\n  //   text.setSelectionRange(0, 99999);\r\n  //   document.execCommand(\"copy\");\r\n  //   alert(\"Copied\");\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}>\r\n        {id + 1}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Details\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Grid container spacing={3}>\r\n\r\n              <Grid item xs={2} align=\"center\" >Solve #{result.id + 1}</Grid>\r\n              <Grid item xs={2} align=\"center\">{time}</Grid>\r\n              <Grid item xs={6} align=\"center\">{date}</Grid>\r\n              <Grid item xs={2} align=\"right\">\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  onClick={() => {\r\n                    handleClose()\r\n                    deleteSolve(id)\r\n                  }}\r\n                >\r\n                  <DeleteIcon></DeleteIcon>\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                Scramble: {scramble}\r\n                {/* <Button onClick={() => copyScramble(scramble)}>\r\n                  Copy\r\n                </Button> */}\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResultDetails\r\n","import React from 'react'\r\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, TableFooter, Paper } from '@material-ui/core'\r\n// import { DataGrid } from '@material-ui/data-grid';\r\nimport ResultDetails from  './ResultDetails'\r\n// import './Results.css';\r\n\r\nconst Results = ({ results, deleteSolve }) => {\r\n  return (\r\n    !results[0] \r\n      ? <Typography variant=\"body1\">No history</Typography>\r\n      :\r\n    <TableContainer component={Paper} >\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\"> # </TableCell>\r\n            <TableCell align=\"center\">Time</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {results.map((result) => (\r\n            <TableRow key={result.id} color=\"primary\">\r\n              <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                <ResultDetails result={result} deleteSolve={deleteSolve} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">{result.time}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n\r\n        {/* <TableFooter>\r\n          <TableRow>\r\n            <TablePagination rowsPerPageOptions={[10, 50]} />\r\n          </TableRow>\r\n        </TableFooter> */}\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n  // return (\r\n  //   <div style={{ height: 400, width: '100%' }}>\r\n  //     <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n  //   </div>\r\n  // )\r\n  // return (\r\n  //   <ol>\r\n  //     {results.map(result =>\r\n  //       <li key={result.id}>\r\n  //         {result.time} ---- {result.date} ---- {result.scramble}\r\n  //       </li>\r\n  //     )}\r\n  //   </ol>\r\n  // )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Scramble = ({ scramble, newScramble }) => {\r\n  return (\r\n    <div>\r\n      <p>{scramble}</p>\r\n      <Button \r\n        variant=\"contained\"\r\n        onClick={() => newScramble()}\r\n      >\r\n        New Scramble\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scramble\r\n","import { Card, CardContent, CardActions, Typography, Button } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst AO5 = ({ao5, pb}) => {\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h5\">\r\n          Average of 5:\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"primary\">\r\n          {ao5 === \"N/A\" ? ao5 : ao5.time}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          {ao5 === \"N/A\" ? null : ao5.details}\r\n        </Typography>\r\n\r\n        <Typography variant=\"h5\">\r\n          Best:\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"primary\">\r\n          {pb === \"N/A\" ? pb : pb.time}\r\n        </Typography>\r\n      </CardContent>\r\n      {/* <CardActions>\r\n        <Button size=\"small\">Show</Button>\r\n      </CardActions> */}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AO5\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nconst LineChart = ({ results, ao5 }) => {\r\n  return (\r\n    results[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: results.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: results.map(result => result.time),\r\n            label: \"Time\",\r\n            borderColor: \"#ff7961\",\r\n            fill: false,\r\n          }, {\r\n            data: ao5.map(t => {\r\n              return t === \"N/A\" ? null : t.time\r\n            }),\r\n            label: \"Average of 5\",\r\n            borderColor: \"#3f50b5\",\r\n            fill: false,\r\n          }],\r\n          reverse: true\r\n        }}\r\n        options={{\r\n          scales: {\r\n            x: {\r\n              reverse: true\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n}\r\n\r\nexport default LineChart\r\n","const getScramble = () => {\r\n  const len = 20\r\n  let ans = \"\"\r\n  let s = -1;\r\n  let x = [\"U\", \"U'\", \"U2\", \"D\", \"D'\", \"D2\"]\r\n  let y = [\"R\", \"R'\", \"R2\", \"L\", \"L'\", \"L2\"]\r\n  let z = [\"F\", \"F'\", \"F2\", \"B\", \"B'\", \"B2\"]\r\n\r\n  let move = \"\"\r\n\r\n  let k = Math.floor(Math.random() * 18)\r\n  if (k < 6) {\r\n    move = x[k]\r\n    s = 0\r\n  } else if (k < 12) {\r\n    move = y[k - 6]\r\n    s = 1\r\n  } else {\r\n    move = z[k - 12]\r\n    s = 2\r\n  }\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    let k = Math.floor(Math.random() * 12)\r\n    if (s === 0) {\r\n      if (k < 6) {\r\n        move = y[k]\r\n        s = 1\r\n      } else {\r\n        move = z[k - 6]\r\n        s = 2\r\n      }\r\n    } else if (s === 1) {\r\n      if (k < 6) {\r\n        move = x[k]\r\n        s = 0\r\n      } else {\r\n        move = z[k - 6]\r\n        s = 2\r\n      }\r\n    } else {\r\n      if (k < 6) {\r\n        move = x[k]\r\n        s = 0\r\n      } else {\r\n        move = y[k - 6]\r\n        s = 1\r\n      }\r\n    }\r\n    ans += \" \" + \" \" + move\r\n  }\r\n  return ans\r\n}\r\n\r\nexport default getScramble","import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport Display from './components/Display'\nimport Results from './components/Results'\nimport Scramble from './components/Scramble'\nimport AO5 from './components/AO5'\nimport LineChart from './components/LineChart'\nimport getScramble from './scrambler'\nimport { Box, Typography, Button, Grid } from '@material-ui/core'\n\nconst itv = 100\nconst decimalPlace = 2\n\nconst useStateLC = (key, initial) => {\n  const [value, setValue] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      const saved = window.localStorage.getItem(key)\n      if (saved !== null) {\n        return JSON.parse(saved)\n      }\n    }\n    return initial\n  })\n \n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [value])\n \n  return [value, setValue];\n};\n\nconst App = () => {\n  const [timerOn, setTimerOn] = useState(false)\n  const [displayTime, setDisplayTime] = useState(0)\n  const [intervalID, setIntervalID] = useState(-1)\n  const [startTime, setStartTime] = useState(0)\n  const [p, setP] = useState(false)\n  const [scramble, setScramble] = useState(getScramble())\n\n  // local data\n  const [totalSolves, setTotalSolves] = useStateLC(\"totalSolves\", 0)\n  const [results, setResults] = useStateLC(\"results\", [])\n  const [ao5, setAo5] = useStateLC(\"ao5\", [\"N/A\", \"N/A\", \"N/A\", \"N/A\"])\n  const [personalBest, setPersonalBest] = useStateLC(\"pb\", \"N/A\")\n\n  // console.log(scramble)\n\n  const onKeyDown = (e) => { // press any key to stop the timer\n    e.preventDefault()\n    e.stopPropagation()\n    clearInterval(intervalID)\n    setTimerOn(a => !a)\n    const date = new Date()\n    const newDisplayTime = ((date.getTime() - startTime) / 1000).toFixed(decimalPlace)\n    setDisplayTime(newDisplayTime)\n    setStartTime(0)\n\n    ////////////// save result\n    const newResult = {\n      id: totalSolves,\n      time: newDisplayTime,\n      date: date.toLocaleString(),\n      scramble: scramble\n    }\n    const newResults = [...results]\n    newResults.unshift(newResult)\n\n    setResults(newResults)\n    setTotalSolves(total => total + 1)\n    if (personalBest === \"N/A\" || newDisplayTime <= personalBest.time) {\n      setPersonalBest(newResult)\n    }\n\n    if (totalSolves + 1 >= 5) {\n      let sum = 0, minidx = 0, maxidx = 0\n      for (let i = 0; i < 5; i++) {\n        let cur = parseFloat(newResults[i].time)\n        sum += cur\n        if (cur < parseFloat(newResults[minidx].time)) minidx = i;\n        if (cur >= parseFloat(newResults[maxidx].time)) maxidx = i;\n      }\n      let details = \"\"\n      for (let i = 4; i >= 0; i--) {\n        details += \" \"\n        if (i === minidx || i === maxidx) details += '(' + newResults[i].time + ')'\n        else details += newResults[i].time\n      }\n      setAo5(ao5 => {\n        const newAO5 = [...ao5]\n        newAO5.unshift({\n          time: ((sum - parseFloat(newResults[minidx].time) - parseFloat(newResults[maxidx].time)) / 3).toFixed(2),\n          details: details\n        })\n        return newAO5\n      })\n    }\n\n    setScramble(getScramble())\n    document.removeEventListener(\"keydown\", onKeyDown)\n  }\n\n  const onKeyUp = (e) => {\n    if (intervalID === -1) {\n      if (e.keyCode === 32) {\n        // start timing\n        e.preventDefault()\n        e.stopPropagation()\n        const startTimeDate = new Date()\n        setStartTime(startTimeDate.getTime())\n        setDisplayTime(0)\n        const interval = setInterval(() => {\n          setDisplayTime(displayTime => ((displayTime * 10 + 1) / 10).toFixed(1))\n        }, itv)\n        setIntervalID(interval)\n        setTimerOn(a => !a)\n        document.removeEventListener(\"keyup\", onKeyUp)\n      } else if (e.key === 'Escape') {\n        e.preventDefault()\n        setDisplayTime(0)\n      }\n    } else {\n      // reset keyup\n      setIntervalID(-1)\n      setP(a => !a)\n      document.removeEventListener(\"keydown\", onKeyDown)\n      document.removeEventListener(\"keyup\", onKeyUp)\n    }\n  }\n\n  useEffect(() => {\n    // console.log(\"useEffect\")\n    if (timerOn) document.addEventListener(\"keydown\", onKeyDown)\n    else document.addEventListener(\"keyup\", onKeyUp)\n  }, [timerOn, p])\n\n  // console.log(results)\n  // console.log(totalSolves)\n  // console.log(ao5)\n\n  const deleteSolve = (id) => {\n    const newResults = [...results]\n    for (let i = totalSolves - id - 1; i >= 1; i--) {\n      newResults[i] = newResults[i - 1]\n      newResults[i].id--\n    }\n    newResults.shift()\n    setResults(newResults)\n\n    const newTotal = totalSolves - 1\n    console.log(newTotal)\n    setTotalSolves(newTotal)\n\n    // update pb\n    let newPB = newResults[0]\n    for (let i = 1; i < newTotal; i++) {\n      if (newResults[i].time < newPB.time) newPB = newResults[i]\n    }\n    setPersonalBest(newPB ? newPB : \"N/A\")\n\n    // update ao5\n    const newAO5 = []\n    for (let s = 0; s < newTotal - 4; s++) {\n      let sum = 0, minidx = 0, maxidx = 0\n      for (let i = s; i < s + 5; i++) {\n        let cur = parseFloat(newResults[i].time)\n        sum += cur\n        if (cur < parseFloat(newResults[minidx].time)) minidx = i;\n        if (cur >= parseFloat(newResults[maxidx].time)) maxidx = i;\n      }\n      let details = \"\"\n      for (let i = s + 4; i >= s; i--) {\n        details += \" \"\n        if (i === minidx || i === maxidx) details += '(' + newResults[i].time + ')'\n        else details += newResults[i].time\n      }\n      newAO5.push({\n        time: ((sum - parseFloat(newResults[minidx].time) - parseFloat(newResults[maxidx].time)) / 3).toFixed(2),\n        details: details\n      })\n    }\n    for (let i = 0; i < 4; i++) newAO5.push(\"N/A\")\n    console.log(newAO5)\n    setAo5(newAO5)\n  }\n\n  const resetSolves = () => {\n    if (!results[0]) {\n      alert(\"No solves available\")\n    } else if (window.confirm(\"Do you want to remove all solves?\")) {\n      setTotalSolves(0)\n      setResults([])\n      setDisplayTime(0)\n      setAo5([\"N/A\", \"N/A\", \"N/A\", \"N/A\"])\n      setPersonalBest(\"N/A\")\n    }\n  }\n\n  return intervalID === -1 ? (\n    <div className=\"App\">\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={12}>\n          <Scramble scramble={scramble} newScramble={() => setScramble(getScramble())} />\n        </Grid>\n\n        <Grid item xs={3}>\n          <Box mb={2}>\n            <Button variant=\"contained\" color=\"secondary\" onClick={resetSolves}>\n              Reset All\n            </Button>\n          </Box>\n          <Box  className=\"results-table\">\n            <Results results={results} deleteSolve={deleteSolve} />\n          </Box>\n        </Grid>\n\n        <Grid item xs={6}>\n          <Box mb={2}>\n            <Display time={displayTime} active={0} />\n          </Box>\n          <LineChart results={results} ao5={ao5} />\n        </Grid>\n\n        <Grid item xs={3}>\n          <AO5 ao5={ao5[0]} pb={personalBest} />\n        </Grid>\n\n      </Grid>\n    </div>\n  ) : (\n    <Display time={displayTime} active={1} />\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}