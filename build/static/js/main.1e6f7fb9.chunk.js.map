{"version":3,"sources":["components/Display.jsx","components/ResultDetails.jsx","components/Results.jsx","components/Scramble.jsx","components/AO5.jsx","components/LineChart.jsx","scrambler.js","App.js","index.js"],"names":["Display","time","active","className","Typography","variant","ResultDetails","result","deleteSolve","inTable","id","date","scramble","useState","open","setOpen","handleClose","Button","onClick","color","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","Grid","container","spacing","item","xs","align","size","copy","DialogActions","autoFocus","Results","results","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","scope","Scramble","newScramble","AO5","ao5","pb","Card","CardContent","details","LineChart","data","labels","Date","toLocaleDateString","datasets","label","borderColor","fill","t","reverse","options","scales","x","getScramble","ans","s","y","z","move","k","Math","floor","random","i","len","useStateLC","key","initial","window","saved","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","App","timerOn","setTimerOn","displayTime","setDisplayTime","intervalID","setIntervalID","startTime","setStartTime","p","setP","setScramble","totalSolves","setTotalSolves","setResults","setAo5","personalBest","setPersonalBest","onKeyDown","e","preventDefault","stopPropagation","clearInterval","a","newDisplayTime","getTime","toFixed","newResult","toLocaleString","newResults","unshift","total","parseFloat","sum","minidx","maxidx","cur","newAO5","document","removeEventListener","onKeyUp","keyCode","startTimeDate","interval","setInterval","addEventListener","justify","Box","mb","confirm","alert","shift","newTotal","console","log","newPB","push","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1e6f7fb9.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Display.css';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Display = ({ time, active }) => {\r\n  return (\r\n    <div className={active ? \"activeDisplay\" : \"inactiveDisplay\"}>\r\n      <div className=\"stopwatch\">\r\n        <Typography variant=\"h1\">\r\n          <strong>{time}</strong>\r\n        </Typography>\r\n        {active ? null : <Typography variant=\"body1\" className=\"blink\">Press Space to start</Typography>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Display\r\n","import React, { useState } from 'react'\r\nimport { Typography, Grid, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport copy from 'copy-to-clipboard'\r\n\r\nconst ResultDetails = ({ result, deleteSolve, inTable }) => {\r\n  const { id, time, date, scramble } = result\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}>\r\n        {inTable ? id + 1\r\n        : <Typography variant=\"h6\" color=\"primary\">\r\n            {result.time}\r\n          </Typography>}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Details\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Grid container spacing={3}>\r\n\r\n              <Grid item xs={2} align=\"center\" >Solve #{result.id + 1}</Grid>\r\n              <Grid item xs={3} align=\"center\">{time}</Grid>\r\n              <Grid item xs={5} align=\"center\">{date}</Grid>\r\n              {inTable ? <Grid item xs={2} align=\"right\">\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  onClick={() => {\r\n                    handleClose()\r\n                    deleteSolve(id)\r\n                  }}\r\n                >\r\n                  <DeleteIcon></DeleteIcon>\r\n                </Button>\r\n              </Grid> : null}\r\n              <Grid item xs={10}>\r\n                Scramble: {scramble}\r\n              </Grid>\r\n              <Grid item xs={2} align=\"right\">\r\n                <Button onClick={() => copy(scramble)}>\r\n                  <FileCopyIcon></FileCopyIcon>\r\n                </Button>\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResultDetails\r\n","import React from 'react'\r\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, TableFooter, Paper } from '@material-ui/core'\r\nimport ResultDetails from  './ResultDetails'\r\n\r\nconst Results = ({ results, deleteSolve }) => {\r\n  return (\r\n    !results[0] \r\n      ? <Typography variant=\"body1\">No history</Typography>\r\n      :\r\n    <TableContainer component={Paper} >\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\"> # </TableCell>\r\n            <TableCell align=\"center\">Time</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {results.map((result) => (\r\n            <TableRow key={result.id} color=\"primary\">\r\n              <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                <ResultDetails result={result} deleteSolve={deleteSolve} inTable={1} />\r\n              </TableCell>\r\n              <TableCell align=\"center\">{result.time}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n\r\n        {/* <TableFooter>\r\n          <TableRow>\r\n            <TablePagination rowsPerPageOptions={[10, 50]} />\r\n          </TableRow>\r\n        </TableFooter> */}\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Scramble = ({ scramble, newScramble }) => {\r\n  return (\r\n    <div>\r\n      <p>{scramble}</p>\r\n      <Button \r\n        variant=\"contained\"\r\n        onClick={() => newScramble()}\r\n      >\r\n        New Scramble\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scramble\r\n","import { Card, CardContent, CardActions, Typography, Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport ResultDetails from './ResultDetails'\r\n\r\nconst AO5 = ({ao5, pb}) => {\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography variant=\"h5\">\r\n          Average of 5:\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"primary\">\r\n          {ao5 === \"N/A\" ? ao5 : ao5.time}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n          {ao5 === \"N/A\" ? null : ao5.details}\r\n        </Typography>\r\n\r\n        <Typography variant=\"h5\">\r\n          Best:\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"primary\">\r\n          {pb === \"N/A\" ? pb : <ResultDetails result={pb} inTable={0}/>}\r\n        </Typography>\r\n      </CardContent>\r\n      {/* <CardActions>\r\n        <Button size=\"small\">Show</Button>\r\n      </CardActions> */}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AO5\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nconst LineChart = ({ results, ao5 }) => {\r\n  return (\r\n    results[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: results.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: results.map(result => result.time),\r\n            label: \"Time\",\r\n            borderColor: \"#ff7961\",\r\n            fill: false,\r\n          }, {\r\n            data: ao5.map(t => {\r\n              return t === \"N/A\" ? null : t.time\r\n            }),\r\n            label: \"Average of 5\",\r\n            borderColor: \"#3f50b5\",\r\n            fill: false,\r\n          }],\r\n          reverse: true\r\n        }}\r\n        options={{\r\n          scales: {\r\n            x: {\r\n              reverse: true\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n}\r\n\r\nexport default LineChart\r\n","const getScramble = () => {\r\n  const len = 20\r\n  let ans = \"\"\r\n  let s = -1;\r\n  let x = [\"U\", \"U'\", \"U2\", \"D\", \"D'\", \"D2\"]\r\n  let y = [\"R\", \"R'\", \"R2\", \"L\", \"L'\", \"L2\"]\r\n  let z = [\"F\", \"F'\", \"F2\", \"B\", \"B'\", \"B2\"]\r\n\r\n  let move = \"\"\r\n\r\n  let k = Math.floor(Math.random() * 18)\r\n  if (k < 6) {\r\n    move = x[k]\r\n    s = 0\r\n  } else if (k < 12) {\r\n    move = y[k - 6]\r\n    s = 1\r\n  } else {\r\n    move = z[k - 12]\r\n    s = 2\r\n  }\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    let k = Math.floor(Math.random() * 12)\r\n    if (s === 0) {\r\n      if (k < 6) {\r\n        move = y[k]\r\n        s = 1\r\n      } else {\r\n        move = z[k - 6]\r\n        s = 2\r\n      }\r\n    } else if (s === 1) {\r\n      if (k < 6) {\r\n        move = x[k]\r\n        s = 0\r\n      } else {\r\n        move = z[k - 6]\r\n        s = 2\r\n      }\r\n    } else {\r\n      if (k < 6) {\r\n        move = x[k]\r\n        s = 0\r\n      } else {\r\n        move = y[k - 6]\r\n        s = 1\r\n      }\r\n    }\r\n    ans += move\r\n    if (i < len - 1) ans += \" \"\r\n  }\r\n  return ans\r\n}\r\n\r\nexport default getScramble","import './App.css';\r\nimport React, { useState, useEffect } from 'react'\r\nimport Display from './components/Display'\r\nimport Results from './components/Results'\r\nimport Scramble from './components/Scramble'\r\nimport AO5 from './components/AO5'\r\nimport LineChart from './components/LineChart'\r\nimport getScramble from './scrambler'\r\nimport { Box, Button, Grid } from '@material-ui/core'\r\n\r\nconst itv = 100\r\nconst decimalPlace = 2\r\n\r\nconst useStateLC = (key, initial) => {\r\n  const [value, setValue] = useState(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const saved = window.localStorage.getItem(key)\r\n      if (saved !== null) {\r\n        return JSON.parse(saved)\r\n      }\r\n    }\r\n    return initial\r\n  })\r\n \r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [value])\r\n \r\n  return [value, setValue];\r\n};\r\n\r\nconst App = () => {\r\n  const [timerOn, setTimerOn] = useState(false)\r\n  const [displayTime, setDisplayTime] = useState(0)\r\n  const [intervalID, setIntervalID] = useState(-1)\r\n  const [startTime, setStartTime] = useState(0)\r\n  const [p, setP] = useState(false)\r\n  const [scramble, setScramble] = useState(getScramble())\r\n\r\n  // local data\r\n  const [totalSolves, setTotalSolves] = useStateLC(\"totalSolves\", 0)\r\n  const [results, setResults] = useStateLC(\"results\", [])\r\n  const [ao5, setAo5] = useStateLC(\"ao5\", [\"N/A\", \"N/A\", \"N/A\", \"N/A\"])\r\n  const [personalBest, setPersonalBest] = useStateLC(\"pb\", \"N/A\")\r\n\r\n  // console.log(scramble)\r\n\r\n  const onKeyDown = (e) => { // press any key to stop the timer\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    clearInterval(intervalID)\r\n    setTimerOn(a => !a)\r\n    const date = new Date()\r\n    const newDisplayTime = ((date.getTime() - startTime) / 1000).toFixed(decimalPlace)\r\n    setDisplayTime(newDisplayTime)\r\n    setStartTime(0)\r\n\r\n    ////////////// save result\r\n    const newResult = {\r\n      id: totalSolves,\r\n      time: newDisplayTime,\r\n      date: date.toLocaleString(),\r\n      scramble: scramble\r\n    }\r\n    const newResults = [...results]\r\n    newResults.unshift(newResult)\r\n\r\n    setResults(newResults)\r\n    setTotalSolves(total => total + 1)\r\n\r\n    // update PB\r\n    if (personalBest === \"N/A\" || parseFloat(newDisplayTime) <= parseFloat(personalBest.time)) {\r\n      setPersonalBest(newResult)\r\n    }\r\n\r\n    // update AO5\r\n    if (totalSolves + 1 >= 5) {\r\n      let sum = 0, minidx = 0, maxidx = 0\r\n      for (let i = 0; i < 5; i++) {\r\n        let cur = parseFloat(newResults[i].time)\r\n        sum += cur\r\n        if (cur < parseFloat(newResults[minidx].time)) minidx = i;\r\n        if (cur >= parseFloat(newResults[maxidx].time)) maxidx = i;\r\n      }\r\n      let details = \"\"\r\n      for (let i = 4; i >= 0; i--) {\r\n        details += \" \"\r\n        if (i === minidx || i === maxidx) details += '(' + newResults[i].time + ')'\r\n        else details += newResults[i].time\r\n      }\r\n      setAo5(ao5 => {\r\n        const newAO5 = [...ao5]\r\n        newAO5.unshift({\r\n          time: ((sum - parseFloat(newResults[minidx].time) - parseFloat(newResults[maxidx].time)) / 3).toFixed(2),\r\n          details: details\r\n        })\r\n        return newAO5\r\n      })\r\n    }\r\n\r\n    setScramble(getScramble())\r\n    document.removeEventListener(\"keydown\", onKeyDown)\r\n  }\r\n\r\n  const onKeyUp = (e) => {\r\n    if (intervalID === -1) {\r\n      if (e.keyCode === 32) {\r\n        // start timing\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        const startTimeDate = new Date()\r\n        setStartTime(startTimeDate.getTime())\r\n        setDisplayTime(0)\r\n        const interval = setInterval(() => {\r\n          setDisplayTime(displayTime => ((displayTime * 10 + 1) / 10).toFixed(1))\r\n        }, itv)\r\n        setIntervalID(interval)\r\n        setTimerOn(a => !a)\r\n        document.removeEventListener(\"keyup\", onKeyUp)\r\n      } else if (e.key === 'Escape') {\r\n        e.preventDefault()\r\n        setDisplayTime(0)\r\n      }\r\n    } else {\r\n      // reset keyup\r\n      setIntervalID(-1)\r\n      setP(a => !a)\r\n      document.removeEventListener(\"keydown\", onKeyDown)\r\n      document.removeEventListener(\"keyup\", onKeyUp)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(\"useEffect\")\r\n    if (timerOn) document.addEventListener(\"keydown\", onKeyDown)\r\n    else document.addEventListener(\"keyup\", onKeyUp)\r\n  }, [timerOn, p])\r\n\r\n  // console.log(results)\r\n  // console.log(totalSolves)\r\n  // console.log(ao5)\r\n\r\n  const deleteSolve = (id) => {\r\n    const newResults = [...results]\r\n    for (let i = totalSolves - id - 1; i >= 1; i--) {\r\n      newResults[i] = newResults[i - 1]\r\n      newResults[i].id--\r\n    }\r\n    newResults.shift()\r\n    setResults(newResults)\r\n\r\n    const newTotal = totalSolves - 1\r\n    console.log(newTotal)\r\n    setTotalSolves(newTotal)\r\n\r\n    // update pb\r\n    let newPB = newResults[0]\r\n    for (let i = 1; i < newTotal; i++) {\r\n      if (parseFloat(newResults[i].time) < parseFloat(newPB.time)) newPB = newResults[i]\r\n    }\r\n    setPersonalBest(newPB ? newPB : \"N/A\")\r\n\r\n    // update ao5\r\n    const newAO5 = []\r\n    for (let s = 0; s < newTotal - 4; s++) {\r\n      let sum = 0, minidx = 0, maxidx = 0\r\n      for (let i = s; i < s + 5; i++) {\r\n        let cur = parseFloat(newResults[i].time)\r\n        sum += cur\r\n        if (cur < parseFloat(newResults[minidx].time)) minidx = i;\r\n        if (cur >= parseFloat(newResults[maxidx].time)) maxidx = i;\r\n      }\r\n      let details = \"\"\r\n      for (let i = s + 4; i >= s; i--) {\r\n        details += \" \"\r\n        if (i === minidx || i === maxidx) details += '(' + newResults[i].time + ')'\r\n        else details += newResults[i].time\r\n      }\r\n      newAO5.push({\r\n        time: ((sum - parseFloat(newResults[minidx].time) - parseFloat(newResults[maxidx].time)) / 3).toFixed(2),\r\n        details: details\r\n      })\r\n    }\r\n    for (let i = 0; i < 4; i++) newAO5.push(\"N/A\")\r\n    console.log(newAO5)\r\n    setAo5(newAO5)\r\n  }\r\n\r\n  const resetSolves = () => {\r\n    if (!results[0]) {\r\n      alert(\"No solves available\")\r\n    } else if (window.confirm(\"Do you want to remove all solves?\")) {\r\n      setTotalSolves(0)\r\n      setResults([])\r\n      setDisplayTime(0)\r\n      setAo5([\"N/A\", \"N/A\", \"N/A\", \"N/A\"])\r\n      setPersonalBest(\"N/A\")\r\n    }\r\n  }\r\n\r\n  return intervalID === -1 ? (\r\n    <div className=\"App\">\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12}>\r\n          <Scramble scramble={scramble} newScramble={() => setScramble(getScramble())} />\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <Box mb={2}>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={resetSolves}>\r\n              Reset All\r\n            </Button>\r\n          </Box>\r\n          <Box className=\"results-table\">\r\n            <Results results={results} deleteSolve={deleteSolve} />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Box mb={2}>\r\n            <Display time={displayTime} active={0} />\r\n          </Box>\r\n          <LineChart results={results} ao5={ao5} />\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <AO5 ao5={ao5[0]} pb={personalBest} />\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </div>\r\n  ) : (\r\n    <Display time={displayTime} active={1} />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}